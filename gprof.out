Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 36.71     11.21    11.21  7043462     0.00     0.00  KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int)
 12.98     15.16     3.96  7108404     0.00     0.00  KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int)
  7.99     17.61     2.44 34987102     0.00     0.00  KSolveNames::Game::MakeMove(KSolveNames::MoveSpec)
  6.95     19.73     2.12   978871     0.00     0.00  KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const
  6.59     21.73     2.01   944493     0.00     0.00  KSolveNames::MoveStorage::LoadMoveSequence()
  6.00     23.57     1.83   749936     0.00     0.00  KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const
  3.93     24.77     1.20  7555040     0.00     0.00  bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&)
  3.83     25.93     1.17   843366     0.00     0.00  KSolveNames::Game::Deal()
  2.98     26.84     0.91      384     0.00     0.00  phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long)
  2.41     27.58     0.73 23871441     0.00     0.00  unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*)
  2.33     28.29     0.71   922002     0.00     0.00  KSolveNames::MoveStorage::PopNextSequenceIndex()
  1.36     28.70     0.41   798744     0.00     0.00  KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const
  0.92     28.98     0.28   547146     0.00     0.00  KSolveNames::MoveStorage::UpdateFringe(unsigned int)
  0.88     29.25     0.27  6382006     0.00     0.00  KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec)
  0.88     29.52     0.27  2027574     0.00     0.00  KSolveNames::Game::MinimumMovesLeft() const
  0.69     29.73     0.21        7     0.03     4.27  KSolveNames::Worker(KSolveNames::WorkerState*)
  0.39     29.86     0.12  5886135     0.00     0.00  KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec)
  0.39     29.98     0.12  1083659     0.00     0.00  KSolveNames::WorkerState::MakeAutoMoves()
  0.33     30.07     0.10  1448341     0.00     0.00  KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const
  0.29     30.16     0.09  7794787     0.00     0.00  void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>)
  0.29     30.25     0.09   994044     0.00     0.00  KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const
  0.21     30.32     0.07  1258881     0.00     0.00  KSolveNames::Game::UnfilteredAvailableMoves() const
  0.20     30.38     0.06  2328918     0.00     0.00  phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long)
  0.13     30.42     0.04  2865974     0.00     0.00  KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int)
  0.10     30.45     0.03   826398     0.00     0.00  KSolveNames::MoveStorage::UpdateMoveTree()
  0.07     30.47     0.02                             _init
  0.05     30.48     0.01        1     0.01     0.62  KSolveNames::GameStateMemory::GameStateMemory()
  0.03     30.50     0.01  1380841     0.00     0.00  KSolveNames::Game::MinFoundationPileSize() const
  0.03     30.50     0.01   951704     0.00     0.00  KSolveNames::MoveStorage::ShareMoves()
  0.03     30.52     0.01       58     0.00     0.00  void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*)
  0.02     30.52     0.01        2     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  0.00     30.52     0.00    98172     0.00     0.00  KSolveNames::Game::GameOver() const
  0.00     30.52     0.00    58067     0.00     0.00  KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec)
  0.00     30.52     0.00      823     0.00     0.00  void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long)
  0.00     30.52     0.00       76     0.00     0.00  KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int)
  0.00     30.52     0.00       76     0.00     0.00  KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const
  0.00     30.52     0.00       52     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.00     30.52     0.00       52     0.00     0.00  unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&)
  0.00     30.52     0.00       35     0.00     0.00  void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*)
  0.00     30.52     0.00       13     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00     30.52     0.00        9     0.00     0.00  KSolveNames::Game::Game(KSolveNames::Game const&)
  0.00     30.52     0.00        6     0.00     0.00  KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&)
  0.00     30.52     0.00        2     0.00     0.00  GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00     30.52     0.00        1     0.00     0.00  GetSpec(int, char**)
  0.00     30.52     0.00        1     0.00     0.63  KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int)
  0.00     30.52     0.00        1     0.00     0.01  KSolveNames::NumberedDeal(unsigned int)
  0.00     30.52     0.00        1     0.00     0.00  KSolveNames::DefaultThreads()
  0.00     30.52     0.00        1     0.00     0.00  KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int)
  0.00     30.52     0.00        1     0.00     0.01  KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int)
  0.00     30.52     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()

			Call graph


granularity: each sample hit covers 4 byte(s) for 0.03% of 30.52 seconds

index % time    self  children    called     name
                0.21   29.65       7/7           std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(KSolveNames::WorkerState*), KSolveNames::WorkerState*> > >::_M_run() [2]
[1]     97.8    0.21   29.65       7         KSolveNames::Worker(KSolveNames::WorkerState*) [1]
               11.21    4.41 7043462/7043462     KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [3]
                0.12    5.86 1083659/1083659     KSolveNames::WorkerState::MakeAutoMoves() [4]
                0.09    1.99  994044/994044      KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const [9]
                2.01    0.00  944493/944493      KSolveNames::MoveStorage::LoadMoveSequence() [10]
                1.17    0.00  843364/843366      KSolveNames::Game::Deal() [13]
                0.27    0.73 2027573/2027574     KSolveNames::Game::MinimumMovesLeft() const [14]
                0.71    0.00  922002/922002      KSolveNames::MoveStorage::PopNextSequenceIndex() [17]
                0.45    0.00 6420894/34987102     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [7]
                0.01    0.31  951704/951704      KSolveNames::MoveStorage::ShareMoves() [23]
                0.27    0.00 6382006/6382006     KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec) [25]
                0.04    0.00 2865974/2865974     KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int) [29]
                0.00    0.00   98171/98172       KSolveNames::Game::GameOver() const [44]
                0.00    0.00       7/9           KSolveNames::Game::Game(KSolveNames::Game const&) [53]
                0.00    0.00       5/6           KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [54]
-----------------------------------------------
                                                 <spontaneous>
[2]     97.8    0.00   29.86                 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(KSolveNames::WorkerState*), KSolveNames::WorkerState*> > >::_M_run() [2]
                0.21   29.65       7/7           KSolveNames::Worker(KSolveNames::WorkerState*) [1]
-----------------------------------------------
               11.21    4.41 7043462/7043462     KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[3]     51.2   11.21    4.41 7043462         KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [3]
                3.96    0.09 7108404/7108404     KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [6]
                0.06    0.30 2328918/2328918     phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [22]
-----------------------------------------------
                0.12    5.86 1083659/1083659     KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[4]     19.6    0.12    5.86 1083659         KSolveNames::WorkerState::MakeAutoMoves() [4]
                0.07    4.47 1258881/1258881     KSolveNames::Game::UnfilteredAvailableMoves() const [5]
                1.20    0.12 7555040/7555040     bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) [12]
                0.00    0.00   65791/34987102     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [7]
                0.00    0.00   58067/58067       KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec) [45]
-----------------------------------------------
                0.07    4.47 1258881/1258881     KSolveNames::WorkerState::MakeAutoMoves() [4]
[5]     14.9    0.07    4.47 1258881         KSolveNames::Game::UnfilteredAvailableMoves() const [5]
                2.12    0.00  978871/978871      KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const [8]
                1.83    0.00  749936/749936      KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const [11]
                0.41    0.00  798744/798744      KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const [21]
                0.10    0.00 1448341/1448341     KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const [27]
                0.01    0.00 1380841/1380841     KSolveNames::Game::MinFoundationPileSize() const [32]
-----------------------------------------------
                3.96    0.09 7108404/7108404     KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [3]
[6]     13.3    3.96    0.09 7108404         KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [6]
                0.09    0.00 7794787/7794787     void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>) [28]
-----------------------------------------------
                0.00    0.00      76/34987102     main [18]
                0.00    0.00   65791/34987102     KSolveNames::WorkerState::MakeAutoMoves() [4]
                0.45    0.00 6420894/34987102     KSolveNames::Worker(KSolveNames::WorkerState*) [1]
                1.99    0.00 28500341/34987102     KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const [9]
[7]      8.0    2.44    0.00 34987102         KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [7]
-----------------------------------------------
                2.12    0.00  978871/978871      KSolveNames::Game::UnfilteredAvailableMoves() const [5]
[8]      6.9    2.12    0.00  978871         KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const [8]
-----------------------------------------------
                0.09    1.99  994044/994044      KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[9]      6.8    0.09    1.99  994044         KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const [9]
                1.99    0.00 28500341/34987102     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [7]
-----------------------------------------------
                2.01    0.00  944493/944493      KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[10]     6.6    2.01    0.00  944493         KSolveNames::MoveStorage::LoadMoveSequence() [10]
-----------------------------------------------
                1.83    0.00  749936/749936      KSolveNames::Game::UnfilteredAvailableMoves() const [5]
[11]     6.0    1.83    0.00  749936         KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const [11]
-----------------------------------------------
                1.20    0.12 7555040/7555040     KSolveNames::WorkerState::MakeAutoMoves() [4]
[12]     4.3    1.20    0.12 7555040         bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) [12]
                0.12    0.00 5886135/5886135     KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec) [26]
-----------------------------------------------
                0.00    0.00       1/843366      KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [37]
                0.00    0.00       1/843366      main [18]
                1.17    0.00  843364/843366      KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[13]     3.8    1.17    0.00  843366         KSolveNames::Game::Deal() [13]
-----------------------------------------------
                0.00    0.00       1/2027574     KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
                0.27    0.73 2027573/2027574     KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[14]     3.3    0.27    0.73 2027574         KSolveNames::Game::MinimumMovesLeft() const [14]
                0.73    0.00 23871441/23871441     unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*) [16]
-----------------------------------------------
                0.30    0.00     128/384         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [22]
                0.61    0.00     256/384         KSolveNames::GameStateMemory::GameStateMemory() [20]
[15]     3.0    0.91    0.00     384         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [15]
                0.00    0.00     567/823         void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [46]
-----------------------------------------------
                0.73    0.00 23871441/23871441     KSolveNames::Game::MinimumMovesLeft() const [14]
[16]     2.4    0.73    0.00 23871441         unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*) [16]
-----------------------------------------------
                0.71    0.00  922002/922002      KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[17]     2.3    0.71    0.00  922002         KSolveNames::MoveStorage::PopNextSequenceIndex() [17]
-----------------------------------------------
                                                 <spontaneous>
[18]     2.1    0.00    0.64                 main [18]
                0.00    0.63       1/1           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
                0.00    0.01       1/1           KSolveNames::NumberedDeal(unsigned int) [35]
                0.00    0.00      76/34987102     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [7]
                0.00    0.00       1/843366      KSolveNames::Game::Deal() [13]
                0.00    0.00       1/1           KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [37]
                0.00    0.00      76/76          KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const [48]
                0.00    0.00       1/1           GetSpec(int, char**) [56]
                0.00    0.00       1/1           KSolveNames::DefaultThreads() [57]
                0.00    0.00       1/9           KSolveNames::Game::Game(KSolveNames::Game const&) [53]
                0.00    0.00       1/98172       KSolveNames::Game::GameOver() const [44]
-----------------------------------------------
                0.00    0.63       1/1           main [18]
[19]     2.1    0.00    0.63       1         KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
                0.01    0.61       1/1           KSolveNames::GameStateMemory::GameStateMemory() [20]
                0.01    0.00      58/58          void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [33]
                0.00    0.00       1/2027574     KSolveNames::Game::MinimumMovesLeft() const [14]
                0.00    0.00     256/823         void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [46]
                0.00    0.00       1/9           KSolveNames::Game::Game(KSolveNames::Game const&) [53]
                0.00    0.00       1/6           KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [54]
-----------------------------------------------
                0.01    0.61       1/1           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
[20]     2.0    0.01    0.61       1         KSolveNames::GameStateMemory::GameStateMemory() [20]
                0.61    0.00     256/384         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [15]
-----------------------------------------------
                0.41    0.00  798744/798744      KSolveNames::Game::UnfilteredAvailableMoves() const [5]
[21]     1.4    0.41    0.00  798744         KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const [21]
-----------------------------------------------
                0.06    0.30 2328918/2328918     KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [3]
[22]     1.2    0.06    0.30 2328918         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [22]
                0.30    0.00     128/384         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [15]
-----------------------------------------------
                0.01    0.31  951704/951704      KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[23]     1.0    0.01    0.31  951704         KSolveNames::MoveStorage::ShareMoves() [23]
                0.28    0.00  547146/547146      KSolveNames::MoveStorage::UpdateFringe(unsigned int) [24]
                0.03    0.00  826398/826398      KSolveNames::MoveStorage::UpdateMoveTree() [30]
-----------------------------------------------
                0.28    0.00  547146/547146      KSolveNames::MoveStorage::ShareMoves() [23]
[24]     0.9    0.28    0.00  547146         KSolveNames::MoveStorage::UpdateFringe(unsigned int) [24]
                0.00    0.00      35/35          void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [51]
-----------------------------------------------
                0.27    0.00 6382006/6382006     KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[25]     0.9    0.27    0.00 6382006         KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec) [25]
-----------------------------------------------
                0.12    0.00 5886135/5886135     bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) [12]
[26]     0.4    0.12    0.00 5886135         KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec) [26]
-----------------------------------------------
                0.10    0.00 1448341/1448341     KSolveNames::Game::UnfilteredAvailableMoves() const [5]
[27]     0.3    0.10    0.00 1448341         KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const [27]
-----------------------------------------------
                0.09    0.00 7794787/7794787     KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [6]
[28]     0.3    0.09    0.00 7794787         void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>) [28]
-----------------------------------------------
                0.04    0.00 2865974/2865974     KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[29]     0.1    0.04    0.00 2865974         KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int) [29]
-----------------------------------------------
                0.03    0.00  826398/826398      KSolveNames::MoveStorage::ShareMoves() [23]
[30]     0.1    0.03    0.00  826398         KSolveNames::MoveStorage::UpdateMoveTree() [30]
-----------------------------------------------
                                                 <spontaneous>
[31]     0.1    0.02    0.00                 _init [31]
-----------------------------------------------
                0.01    0.00 1380841/1380841     KSolveNames::Game::UnfilteredAvailableMoves() const [5]
[32]     0.0    0.01    0.00 1380841         KSolveNames::Game::MinFoundationPileSize() const [32]
-----------------------------------------------
                0.01    0.00      58/58          KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
[33]     0.0    0.01    0.00      58         void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [33]
-----------------------------------------------
                0.01    0.00       2/2           KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [36]
[34]     0.0    0.01    0.00       2         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [34]
-----------------------------------------------
                0.00    0.01       1/1           main [18]
[35]     0.0    0.00    0.01       1         KSolveNames::NumberedDeal(unsigned int) [35]
                0.00    0.01       1/1           KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [36]
-----------------------------------------------
                0.00    0.01       1/1           KSolveNames::NumberedDeal(unsigned int) [35]
[36]     0.0    0.00    0.01       1         KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [36]
                0.01    0.00       2/2           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [34]
                0.00    0.00      52/52          unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&) [50]
-----------------------------------------------
                0.00    0.00       1/1           main [18]
[37]     0.0    0.00    0.00       1         KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [37]
                0.00    0.00       1/843366      KSolveNames::Game::Deal() [13]
-----------------------------------------------
                0.00    0.00       1/98172       main [18]
                0.00    0.00   98171/98172       KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[44]     0.0    0.00    0.00   98172         KSolveNames::Game::GameOver() const [44]
-----------------------------------------------
                0.00    0.00   58067/58067       KSolveNames::WorkerState::MakeAutoMoves() [4]
[45]     0.0    0.00    0.00   58067         KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec) [45]
-----------------------------------------------
                0.00    0.00     256/823         KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
                0.00    0.00     567/823         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [15]
[46]     0.0    0.00    0.00     823         void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [46]
-----------------------------------------------
                0.00    0.00      76/76          KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const [48]
[47]     0.0    0.00    0.00      76         KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int) [47]
-----------------------------------------------
                0.00    0.00      76/76          main [18]
[48]     0.0    0.00    0.00      76         KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const [48]
                0.00    0.00      76/76          KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int) [47]
-----------------------------------------------
                0.00    0.00      52/52          unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&) [50]
[49]     0.0    0.00    0.00      52         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [49]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [58]
-----------------------------------------------
                0.00    0.00      52/52          KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [36]
[50]     0.0    0.00    0.00      52         unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&) [50]
                0.00    0.00      52/52          std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [49]
-----------------------------------------------
                0.00    0.00      35/35          KSolveNames::MoveStorage::UpdateFringe(unsigned int) [24]
[51]     0.0    0.00    0.00      35         void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [51]
-----------------------------------------------
                0.00    0.00      13/13          _GLOBAL__sub_I__ZNK11KSolveNames4Card8AsStringB5cxx11Ev [59]
[52]     0.0    0.00    0.00      13         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [52]
-----------------------------------------------
                0.00    0.00       1/9           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
                0.00    0.00       1/9           main [18]
                0.00    0.00       7/9           KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[53]     0.0    0.00    0.00       9         KSolveNames::Game::Game(KSolveNames::Game const&) [53]
-----------------------------------------------
                0.00    0.00       1/6           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [19]
                0.00    0.00       5/6           KSolveNames::Worker(KSolveNames::WorkerState*) [1]
[54]     0.0    0.00    0.00       6         KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [54]
-----------------------------------------------
                0.00    0.00       2/2           GetSpec(int, char**) [56]
[55]     0.0    0.00    0.00       2         GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [55]
-----------------------------------------------
                0.00    0.00       1/1           main [18]
[56]     0.0    0.00    0.00       1         GetSpec(int, char**) [56]
                0.00    0.00       2/2           GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [55]
-----------------------------------------------
                0.00    0.00       1/1           main [18]
[57]     0.0    0.00    0.00       1         KSolveNames::DefaultThreads() [57]
-----------------------------------------------
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [49]
[58]     0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [58]
-----------------------------------------------

Index by function name

  [56] GetSpec(int, char**)   [25] KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec) [11] KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const
  [55] GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [13] KSolveNames::Game::Deal() [14] KSolveNames::Game::MinimumMovesLeft() const
  [19] KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [7] KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [8] KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const
  [29] KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int) [37] KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [21] KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const
  [23] KSolveNames::MoveStorage::ShareMoves() [53] KSolveNames::Game::Game(KSolveNames::Game const&) [32] KSolveNames::Game::MinFoundationPileSize() const
  [24] KSolveNames::MoveStorage::UpdateFringe(unsigned int) [36] KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [5] KSolveNames::Game::UnfilteredAvailableMoves() const
  [30] KSolveNames::MoveStorage::UpdateMoveTree() [6] KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [27] KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const
  [10] KSolveNames::MoveStorage::LoadMoveSequence() [47] KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int) (Game.cpp) [48] KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const
  [17] KSolveNames::MoveStorage::PopNextSequenceIndex() [1] KSolveNames::Worker(KSolveNames::WorkerState*) (KSolveAStar.cpp) [44] KSolveNames::Game::GameOver() const
  [45] KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec) [12] bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) (Game.hpp) [58] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  [54] KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [26] KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec) (Game.hpp) [34] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
   [4] KSolveNames::WorkerState::MakeAutoMoves() [46] void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [49] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  [35] KSolveNames::NumberedDeal(unsigned int) [22] phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [50] unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&)
  [16] unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*) [15] phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [52] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  [57] KSolveNames::DefaultThreads() [33] void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [28] void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>)
   [3] KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [51] void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [31] _init
  [20] KSolveNames::GameStateMemory::GameStateMemory() [9] KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const
