Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 34.06      1.32     1.32 15052524     0.00     0.00  KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int)
 13.88      1.86     0.54 15052524     0.00     0.00  KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int)
  9.25      2.23     0.36  2468674     0.00     0.00  KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const
  8.48      2.56     0.33 76029872     0.00     0.00  KSolveNames::Game::MakeMove(KSolveNames::MoveSpec)
  7.97      2.87     0.31  2468674     0.00     0.00  KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const
  4.88      3.06     0.19 16276671     0.00     0.00  bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&)
  4.11      3.21     0.16  2500551     0.00     0.00  KSolveNames::MoveStorage::LoadMoveSequence()
  3.34      3.35     0.13  2500553     0.00     0.00  KSolveNames::Game::Deal()
  2.83      3.46     0.11 56966710     0.00     0.00  unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*)
  1.80      3.52     0.07 15070404     0.00     0.00  KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec)
  1.29      3.58     0.05  7383266     0.00     0.00  KSolveNames::Game::MinimumMovesLeft() const
  1.29      3.62     0.05  2468050     0.00     0.00  KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const
  1.03      3.67     0.04  7292786     0.00     0.00  phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long)
  0.77      3.69     0.03  2500552     0.00     0.00  KSolveNames::MoveStorage::PopNextSequenceIndex()
  0.77      3.73     0.03  2500551     0.00     0.00  KSolveNames::WorkerState::MakeAutoMoves()
  0.77      3.75     0.03  1938907     0.00     0.00  KSolveNames::MoveStorage::UpdateMoveTree()
  0.51      3.77     0.02  2960401     0.00     0.00  KSolveNames::Game::UnfilteredAvailableMoves() const
  0.51      3.79     0.02      294     0.00     0.00  phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long)
  0.51      3.81     0.02        1     0.02     3.86  KSolveNames::Worker(KSolveNames::WorkerState*)
  0.26      3.83     0.01 20481299     0.00     0.00  KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec)
  0.26      3.83     0.01 15052524     0.00     0.00  void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>)
  0.26      3.85     0.01  7358501     0.00     0.00  KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int)
  0.26      3.85     0.01  2960398     0.00     0.00  KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const
  0.26      3.87     0.01  2500551     0.00     0.00  KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const
  0.26      3.88     0.01  1938907     0.00     0.00  KSolveNames::MoveStorage::UpdateFringe(unsigned int)
  0.26      3.88     0.01                             _init
  0.13      3.89     0.01        1     0.01     0.02  KSolveNames::GameStateMemory::GameStateMemory()
  0.00      3.89     0.00  2960401     0.00     0.00  KSolveNames::Game::MinFoundationPileSize() const
  0.00      3.89     0.00  2453919     0.00     0.00  KSolveNames::MoveStorage::ShareMoves()
  0.00      3.89     0.00   459850     0.00     0.00  KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec)
  0.00      3.89     0.00    46633     0.00     0.00  KSolveNames::Game::GameOver() const
  0.00      3.89     0.00      294     0.00     0.00  void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long)
  0.00      3.89     0.00       78     0.00     0.00  KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int)
  0.00      3.89     0.00       78     0.00     0.00  KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const
  0.00      3.89     0.00       56     0.00     0.00  void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*)
  0.00      3.89     0.00       56     0.00     0.00  void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*)
  0.00      3.89     0.00       52     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.00      3.89     0.00       52     0.00     0.00  unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&)
  0.00      3.89     0.00       14     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  0.00      3.89     0.00        3     0.00     0.00  GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
  0.00      3.89     0.00        3     0.00     0.00  KSolveNames::Game::Game(KSolveNames::Game const&)
  0.00      3.89     0.00        2     0.00     0.00  KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&)
  0.00      3.89     0.00        2     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  0.00      3.89     0.00        2     0.00     0.00  void std::vector<KSolveNames::MoveSpec, std::allocator<KSolveNames::MoveSpec> >::_M_assign_aux<KSolveNames::MoveSpec const*>(KSolveNames::MoveSpec const*, KSolveNames::MoveSpec const*, std::forward_iterator_tag)
  0.00      3.89     0.00        2     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      3.89     0.00        1     0.00     0.00  GetSpec(int, char**)
  0.00      3.89     0.00        1     0.00     3.88  KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int)
  0.00      3.89     0.00        1     0.00     0.00  KSolveNames::NumberedDeal(unsigned int)
  0.00      3.89     0.00        1     0.00     0.00  KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int)
  0.00      3.89     0.00        1     0.00     0.00  KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int)
  0.00      3.89     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  0.00      3.89     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()

			Call graph


granularity: each sample hit covers 4 byte(s) for 0.26% of 3.89 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.7    0.00    3.88                 main [1]
                0.00    3.88       1/1           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
                0.00    0.00      78/76029872     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [9]
                0.00    0.00       1/2500553     KSolveNames::Game::Deal() [15]
                0.00    0.00       1/1           KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [31]
                0.00    0.00      78/78          KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const [43]
                0.00    0.00       1/1           GetSpec(int, char**) [55]
                0.00    0.00       1/3           KSolveNames::Game::Game(KSolveNames::Game const&) [50]
                0.00    0.00       1/46633       KSolveNames::Game::GameOver() const [40]
                0.00    0.00       1/1           KSolveNames::NumberedDeal(unsigned int) [56]
-----------------------------------------------
                0.00    3.88       1/1           main [1]
[2]     99.7    0.00    3.88       1         KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
                0.02    3.84       1/1           KSolveNames::Worker(KSolveNames::WorkerState*) [3]
                0.01    0.02       1/1           KSolveNames::GameStateMemory::GameStateMemory() [23]
                0.00    0.00       1/7383266     KSolveNames::Game::MinimumMovesLeft() const [13]
                0.00    0.00     256/294         void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [41]
                0.00    0.00      56/56          void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [44]
                0.00    0.00       1/3           KSolveNames::Game::Game(KSolveNames::Game const&) [50]
                0.00    0.00       1/2           KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [51]
-----------------------------------------------
                0.02    3.84       1/1           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
[3]     99.2    0.02    3.84       1         KSolveNames::Worker(KSolveNames::WorkerState*) [3]
                1.32    0.59 15052524/15052524     KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [4]
                0.03    0.95 2500551/2500551     KSolveNames::WorkerState::MakeAutoMoves() [5]
                0.01    0.26 2500551/2500551     KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const [11]
                0.16    0.00 2500551/2500551     KSolveNames::MoveStorage::LoadMoveSequence() [14]
                0.05    0.11 7383265/7383266     KSolveNames::Game::MinimumMovesLeft() const [13]
                0.13    0.00 2500551/2500553     KSolveNames::Game::Deal() [15]
                0.07    0.00 15070404/15070404     KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec) [17]
                0.07    0.00 15070404/76029872     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [9]
                0.00    0.04 2453919/2453919     KSolveNames::MoveStorage::ShareMoves() [20]
                0.03    0.00 2500552/2500552     KSolveNames::MoveStorage::PopNextSequenceIndex() [21]
                0.01    0.00 7358501/7358501     KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int) [27]
                0.00    0.00   46632/46633       KSolveNames::Game::GameOver() const [40]
                0.00    0.00       2/2           void std::vector<KSolveNames::MoveSpec, std::allocator<KSolveNames::MoveSpec> >::_M_assign_aux<KSolveNames::MoveSpec const*>(KSolveNames::MoveSpec const*, KSolveNames::MoveSpec const*, std::forward_iterator_tag) [53]
                0.00    0.00       1/3           KSolveNames::Game::Game(KSolveNames::Game const&) [50]
                0.00    0.00       1/2           KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [51]
-----------------------------------------------
                1.32    0.59 15052524/15052524     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[4]     49.3    1.32    0.59 15052524         KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [4]
                0.54    0.01 15052524/15052524     KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [7]
                0.04    0.00 7292786/7292786     phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [19]
-----------------------------------------------
                0.03    0.95 2500551/2500551     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[5]     25.2    0.03    0.95 2500551         KSolveNames::WorkerState::MakeAutoMoves() [5]
                0.02    0.73 2960401/2960401     KSolveNames::Game::UnfilteredAvailableMoves() const [6]
                0.19    0.01 16276671/16276671     bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) [12]
                0.00    0.00  459850/76029872     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [9]
                0.00    0.00  459850/459850      KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec) [39]
-----------------------------------------------
                0.02    0.73 2960401/2960401     KSolveNames::WorkerState::MakeAutoMoves() [5]
[6]     19.3    0.02    0.73 2960401         KSolveNames::Game::UnfilteredAvailableMoves() const [6]
                0.36    0.00 2468674/2468674     KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const [8]
                0.31    0.00 2468674/2468674     KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const [10]
                0.05    0.00 2468050/2468050     KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const [18]
                0.01    0.00 2960398/2960398     KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const [28]
                0.00    0.00 2960401/2960401     KSolveNames::Game::MinFoundationPileSize() const [38]
-----------------------------------------------
                0.54    0.01 15052524/15052524     KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [4]
[7]     14.1    0.54    0.01 15052524         KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [7]
                0.01    0.00 15052524/15052524     void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>) [26]
-----------------------------------------------
                0.36    0.00 2468674/2468674     KSolveNames::Game::UnfilteredAvailableMoves() const [6]
[8]      9.3    0.36    0.00 2468674         KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const [8]
-----------------------------------------------
                0.00    0.00      78/76029872     main [1]
                0.00    0.00  459850/76029872     KSolveNames::WorkerState::MakeAutoMoves() [5]
                0.07    0.00 15070404/76029872     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
                0.26    0.00 60499540/76029872     KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const [11]
[9]      8.5    0.33    0.00 76029872         KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [9]
-----------------------------------------------
                0.31    0.00 2468674/2468674     KSolveNames::Game::UnfilteredAvailableMoves() const [6]
[10]     8.0    0.31    0.00 2468674         KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const [10]
-----------------------------------------------
                0.01    0.26 2500551/2500551     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[11]     7.0    0.01    0.26 2500551         KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const [11]
                0.26    0.00 60499540/76029872     KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [9]
-----------------------------------------------
                0.19    0.01 16276671/16276671     KSolveNames::WorkerState::MakeAutoMoves() [5]
[12]     5.1    0.19    0.01 16276671         bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) [12]
                0.01    0.00 20481299/20481299     KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec) [25]
-----------------------------------------------
                0.00    0.00       1/7383266     KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
                0.05    0.11 7383265/7383266     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[13]     4.1    0.05    0.11 7383266         KSolveNames::Game::MinimumMovesLeft() const [13]
                0.11    0.00 56966710/56966710     unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*) [16]
-----------------------------------------------
                0.16    0.00 2500551/2500551     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[14]     4.1    0.16    0.00 2500551         KSolveNames::MoveStorage::LoadMoveSequence() [14]
-----------------------------------------------
                0.00    0.00       1/2500553     KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [31]
                0.00    0.00       1/2500553     main [1]
                0.13    0.00 2500551/2500553     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[15]     3.3    0.13    0.00 2500553         KSolveNames::Game::Deal() [15]
-----------------------------------------------
                0.11    0.00 56966710/56966710     KSolveNames::Game::MinimumMovesLeft() const [13]
[16]     2.8    0.11    0.00 56966710         unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*) [16]
-----------------------------------------------
                0.07    0.00 15070404/15070404     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[17]     1.8    0.07    0.00 15070404         KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec) [17]
-----------------------------------------------
                0.05    0.00 2468050/2468050     KSolveNames::Game::UnfilteredAvailableMoves() const [6]
[18]     1.3    0.05    0.00 2468050         KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const [18]
-----------------------------------------------
                0.04    0.00 7292786/7292786     KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [4]
[19]     1.1    0.04    0.00 7292786         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [19]
                0.00    0.00      38/294         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [24]
-----------------------------------------------
                0.00    0.04 2453919/2453919     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[20]     1.0    0.00    0.04 2453919         KSolveNames::MoveStorage::ShareMoves() [20]
                0.03    0.00 1938907/1938907     KSolveNames::MoveStorage::UpdateMoveTree() [22]
                0.01    0.00 1938907/1938907     KSolveNames::MoveStorage::UpdateFringe(unsigned int) [29]
-----------------------------------------------
                0.03    0.00 2500552/2500552     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[21]     0.8    0.03    0.00 2500552         KSolveNames::MoveStorage::PopNextSequenceIndex() [21]
-----------------------------------------------
                0.03    0.00 1938907/1938907     KSolveNames::MoveStorage::ShareMoves() [20]
[22]     0.8    0.03    0.00 1938907         KSolveNames::MoveStorage::UpdateMoveTree() [22]
-----------------------------------------------
                0.01    0.02       1/1           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
[23]     0.6    0.01    0.02       1         KSolveNames::GameStateMemory::GameStateMemory() [23]
                0.02    0.00     256/294         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [24]
-----------------------------------------------
                0.00    0.00      38/294         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [19]
                0.02    0.00     256/294         KSolveNames::GameStateMemory::GameStateMemory() [23]
[24]     0.5    0.02    0.00     294         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [24]
                0.00    0.00      38/294         void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [41]
-----------------------------------------------
                0.01    0.00 20481299/20481299     bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) [12]
[25]     0.3    0.01    0.00 20481299         KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec) [25]
-----------------------------------------------
                0.01    0.00 15052524/15052524     KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [7]
[26]     0.3    0.01    0.00 15052524         void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>) [26]
-----------------------------------------------
                0.01    0.00 7358501/7358501     KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[27]     0.3    0.01    0.00 7358501         KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int) [27]
-----------------------------------------------
                0.01    0.00 2960398/2960398     KSolveNames::Game::UnfilteredAvailableMoves() const [6]
[28]     0.3    0.01    0.00 2960398         KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const [28]
-----------------------------------------------
                0.01    0.00 1938907/1938907     KSolveNames::MoveStorage::ShareMoves() [20]
[29]     0.3    0.01    0.00 1938907         KSolveNames::MoveStorage::UpdateFringe(unsigned int) [29]
                0.00    0.00      56/56          void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [45]
-----------------------------------------------
                                                 <spontaneous>
[30]     0.3    0.01    0.00                 _init [30]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[31]     0.0    0.00    0.00       1         KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [31]
                0.00    0.00       1/2500553     KSolveNames::Game::Deal() [15]
-----------------------------------------------
                0.00    0.00 2960401/2960401     KSolveNames::Game::UnfilteredAvailableMoves() const [6]
[38]     0.0    0.00    0.00 2960401         KSolveNames::Game::MinFoundationPileSize() const [38]
-----------------------------------------------
                0.00    0.00  459850/459850      KSolveNames::WorkerState::MakeAutoMoves() [5]
[39]     0.0    0.00    0.00  459850         KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec) [39]
-----------------------------------------------
                0.00    0.00       1/46633       main [1]
                0.00    0.00   46632/46633       KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[40]     0.0    0.00    0.00   46633         KSolveNames::Game::GameOver() const [40]
-----------------------------------------------
                0.00    0.00      38/294         phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [24]
                0.00    0.00     256/294         KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
[41]     0.0    0.00    0.00     294         void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [41]
-----------------------------------------------
                0.00    0.00      78/78          KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const [43]
[42]     0.0    0.00    0.00      78         KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int) [42]
-----------------------------------------------
                0.00    0.00      78/78          main [1]
[43]     0.0    0.00    0.00      78         KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const [43]
                0.00    0.00      78/78          KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int) [42]
-----------------------------------------------
                0.00    0.00      56/56          KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
[44]     0.0    0.00    0.00      56         void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [44]
-----------------------------------------------
                0.00    0.00      56/56          KSolveNames::MoveStorage::UpdateFringe(unsigned int) [29]
[45]     0.0    0.00    0.00      56         void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [45]
-----------------------------------------------
                0.00    0.00      52/52          unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&) [47]
[46]     0.0    0.00    0.00      52         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [46]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [58]
-----------------------------------------------
                0.00    0.00      52/52          KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [57]
[47]     0.0    0.00    0.00      52         unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&) [47]
                0.00    0.00      52/52          std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [46]
-----------------------------------------------
                0.00    0.00       1/14          GetSpec(int, char**) [55]
                0.00    0.00      13/14          _GLOBAL__sub_I__ZNK11KSolveNames4Card8AsStringB5cxx11Ev [60]
[48]     0.0    0.00    0.00      14         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [48]
-----------------------------------------------
                0.00    0.00       3/3           GetSpec(int, char**) [55]
[49]     0.0    0.00    0.00       3         GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [49]
-----------------------------------------------
                0.00    0.00       1/3           KSolveNames::Worker(KSolveNames::WorkerState*) [3]
                0.00    0.00       1/3           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
                0.00    0.00       1/3           main [1]
[50]     0.0    0.00    0.00       3         KSolveNames::Game::Game(KSolveNames::Game const&) [50]
-----------------------------------------------
                0.00    0.00       1/2           KSolveNames::Worker(KSolveNames::WorkerState*) [3]
                0.00    0.00       1/2           KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [2]
[51]     0.0    0.00    0.00       2         KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [51]
-----------------------------------------------
                0.00    0.00       2/2           KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [57]
[52]     0.0    0.00    0.00       2         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [52]
-----------------------------------------------
                0.00    0.00       2/2           KSolveNames::Worker(KSolveNames::WorkerState*) [3]
[53]     0.0    0.00    0.00       2         void std::vector<KSolveNames::MoveSpec, std::allocator<KSolveNames::MoveSpec> >::_M_assign_aux<KSolveNames::MoveSpec const*>(KSolveNames::MoveSpec const*, KSolveNames::MoveSpec const*, std::forward_iterator_tag) [53]
-----------------------------------------------
                0.00    0.00       2/2           GetSpec(int, char**) [55]
[54]     0.0    0.00    0.00       2         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [54]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[55]     0.0    0.00    0.00       1         GetSpec(int, char**) [55]
                0.00    0.00       3/3           GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [49]
                0.00    0.00       2/2           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [54]
                0.00    0.00       1/14          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [48]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [59]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[56]     0.0    0.00    0.00       1         KSolveNames::NumberedDeal(unsigned int) [56]
                0.00    0.00       1/1           KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [57]
-----------------------------------------------
                0.00    0.00       1/1           KSolveNames::NumberedDeal(unsigned int) [56]
[57]     0.0    0.00    0.00       1         KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [57]
                0.00    0.00      52/52          unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&) [47]
                0.00    0.00       2/2           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [52]
-----------------------------------------------
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [46]
[58]     0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [58]
-----------------------------------------------
                0.00    0.00       1/1           GetSpec(int, char**) [55]
[59]     0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [59]
-----------------------------------------------

Index by function name

  [55] GetSpec(int, char**)    [9] KSolveNames::Game::MakeMove(KSolveNames::MoveSpec) [18] KSolveNames::Game::MovesFromFoundation(KSolveNames::QMoves&, unsigned int) const
  [49] GetNumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [31] KSolveNames::Game::Game(KSolveNames::CardDeck, unsigned int, unsigned int) [38] KSolveNames::Game::MinFoundationPileSize() const
   [2] KSolveNames::KSolveAStar(KSolveNames::Game&, unsigned int, unsigned int) [50] KSolveNames::Game::Game(KSolveNames::Game const&) [6] KSolveNames::Game::UnfilteredAvailableMoves() const
  [27] KSolveNames::MoveStorage::PushBranch(KSolveNames::MoveSpec, unsigned int) [57] KSolveNames::Shuffle(KSolveNames::CardDeck&, unsigned int) [28] KSolveNames::Game::OneMoveToShortFoundationPile(KSolveNames::QMoves&, unsigned int) const
  [20] KSolveNames::MoveStorage::ShareMoves() [7] KSolveNames::GameState::GameState(KSolveNames::Game const&, unsigned int) [43] KSolveNames::Game::IsValid(KSolveNames::MoveSpec) const
  [29] KSolveNames::MoveStorage::UpdateFringe(unsigned int) [42] KSolveNames::Valid(KSolveNames::Game const&, unsigned int, unsigned int, unsigned int) (Game.cpp) [40] KSolveNames::Game::GameOver() const
  [22] KSolveNames::MoveStorage::UpdateMoveTree() [3] KSolveNames::Worker(KSolveNames::WorkerState*) (KSolveAStar.cpp) [58] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  [14] KSolveNames::MoveStorage::LoadMoveSequence() [12] bool KSolveNames::XYZ_Move<KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > >(KSolveNames::MoveSpec, KSolveNames::MoveCounter<frystl::static_deque<KSolveNames::MoveSpec, 500u> > const&) (Game.hpp) [52] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  [21] KSolveNames::MoveStorage::PopNextSequenceIndex() [25] KSolveNames::XYZ_Test(KSolveNames::MoveSpec, KSolveNames::MoveSpec) (Game.hpp) [46] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  [39] KSolveNames::MoveStorage::PushStem(KSolveNames::MoveSpec) [41] void phmap::priv::Deallocate<8ul, std::allocator<KSolveNames::GameState> >(std::allocator<KSolveNames::GameState>*, void*, unsigned long) [47] unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&)
  [51] KSolveNames::MoveStorage::MoveStorage(KSolveNames::SharedMoveStorage&) [19] phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::prepare_insert(unsigned long) [53] void std::vector<KSolveNames::MoveSpec, std::allocator<KSolveNames::MoveSpec> >::_M_assign_aux<KSolveNames::MoveSpec const*>(KSolveNames::MoveSpec const*, KSolveNames::MoveSpec const*, std::forward_iterator_tag)
   [5] KSolveNames::WorkerState::MakeAutoMoves() [24] phmap::priv::raw_hash_set<phmap::priv::FlatHashSetPolicy<KSolveNames::GameState>, KSolveNames::Hasher, phmap::EqualTo<KSolveNames::GameState>, std::allocator<KSolveNames::GameState> >::resize(unsigned long) [59] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  [56] KSolveNames::NumberedDeal(unsigned int) [44] void frystl::Destroy<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [48] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
  [16] unsigned int KSolveNames::MisorderCount<KSolveNames::Card const*>(KSolveNames::Card const*, KSolveNames::Card const*) [45] void frystl::Construct<KSolveNames::SharedMoveStorage::FringeElement>(KSolveNames::SharedMoveStorage::FringeElement*) [26] void std::__introsort_loop<unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}> >(unsigned int*, unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter<std::ranges::__detail::__make_comp_proj<std::ranges::less, std::identity>(std::ranges::less&, std::identity&)::{lambda(auto:1&&, auto:2&&)#1}>)
   [4] KSolveNames::GameStateMemory::IsShortPathToState(KSolveNames::Game const&, unsigned int) [11] KSolveNames::MoveStorage::MakeSequenceMoves(KSolveNames::Game&) const [54] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [23] KSolveNames::GameStateMemory::GameStateMemory() [8] KSolveNames::Game::MovesFromStock(KSolveNames::QMoves&, unsigned int) const [30] _init
  [17] KSolveNames::Game::UnMakeMove(KSolveNames::MoveSpec) [13] KSolveNames::Game::MinimumMovesLeft() const
  [15] KSolveNames::Game::Deal() [10] KSolveNames::Game::MovesFromTableau(KSolveNames::QMoves&) const
